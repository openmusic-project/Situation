; OM File Header - Saved 2010/11/16 19:27:30
; (6.04 :patc (om-make-point 348 111) (om-make-point 50 50) (om-make-point 979 632) "No documentation " 183 0 nil "2010/11/16 19:27:30")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "feuill-domains" (quote ((om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 547 82) (om-make-point 205 28) (list 1 1/2 1/4 1/8 1/12 1/16 1/20 1/32) "(1 1/2 1/4 1/8  1/12 1/16 1/20 1/32)" nil) (om-load-boxcomment "comment" (om-make-point 57 28) (quote "n-puls (0)") "" (om-make-point 466 360) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote common-lisp-user::|1_10|))))) (om-make-point 535 338) (om-make-point 65 53) nil nil nil 1) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote common-lisp-user::|1_9|))))) (om-make-point 760 306) (om-make-point 65 53) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 50 28) (quote "veloc(7)") "" (om-make-point 828 325) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote common-lisp-user::|10_100|))))) (om-make-point 760 230) (om-make-point 65 53) nil nil nil 1) (om-load-boxcall (quote lispfun) "APPEND" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (list 5/2)))) (om-make-point 737 193) (om-make-point 41 37) nil nil nil 1) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote |5/4_9/4S1/4|))))) (om-make-point 794 131) (om-make-point 65 53) nil nil nil 1) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote |5/8_9/8S1/8|))))) (om-make-point 724 129) (om-make-point 65 53) nil nil nil 1) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote |1/16_9/16S1/16|))))) (om-make-point 656 132) (om-make-point 65 53) nil nil nil 1) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote common-lisp-user::|30_220|))))) (om-make-point 511 280) (om-make-point 65 53) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 107 28) (quote "tempo-impulsion (3)") "" (om-make-point 428 144) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 64 42) (quote "tempo-puls$(1)") "" (om-make-point 445 293) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 628 301) (om-make-point 64 37) nil nil nil 1) (om-load-boxcall (quote genfun) "EXPAND-LST" (quote expand-lst) (quote ((om-load-inputfun (quote input-funbox) "the list to expand" "LIST" (list (quote common-lisp-user::|40_700|))))) (om-make-point 533 138) (om-make-point 65 53) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 72 28) (quote "measures(5)") "" (om-make-point 781 194) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 71 28) (quote "pulsation (2)") "" (om-make-point 440 212) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 386 241) (om-make-point 147 28) (list 1 1/2 1/4 1/8 1/16 1/32) "(1 1/2 1/4 1/8 1/16 1/32)" nil) (om-load-boxcomment "comment" (om-make-point 59 28) (quote "t-meas(6)") "" (om-make-point 845 239) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 54 42) (quote "impulsion$(4)") "" (om-make-point 453 90) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxwithed1 (quote box-with-win) "OMLOOP" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "aditional input" "OPLIST" nil) (om-load-inputfun (quote input-funbox) "aditional input" "OPLIST" nil))) (om-make-point 339 451) (om-make-point 41 53) nil nil (list (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) (om-make-point 16 301) (om-make-point 53 53) nil nil 0) (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) (om-make-point 110 302) (om-make-point 47 53) nil nil 0) (om-load-boxin "input0" 0 (om-make-point 5 40) "no documentation" nil nil nil) (om-load-boxin "input1" 1 (om-make-point 182 54) "no documentation" nil nil nil) (om-load-boxcall (quote genfun) "inlist" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 36 99) (om-make-point 53 53) nil nil nil 1) (om-load-boxcall (quote genfun) "inlist" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 175 117) (om-make-point 53 53) nil nil nil 1) (om-load-boxcall (quote genfun) "OMIF" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "if" "TEST" nil) (om-load-inputfun (quote input-funbox) "then" "ACTION" nil) (om-load-inputfun (quote input-funbox) "else" "ELSE" nil))) (om-make-point 66 186) (om-make-point 24 53) nil nil nil 1) (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "WHAT?" nil))) (om-make-point 51 241) (om-make-point 47 53) nil nil nil 3)) (quote ((7 0 0 0 nil 0) (7 1 1 0 nil 0) (2 0 4 0 nil 0) (3 0 5 0 nil 0) (4 0 6 0 nil 0) (4 0 6 1 nil 0) (5 0 6 2 nil 0) (6 0 7 0 nil 0))) 1 "omloop" nil) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 171 337) (om-make-point 64 37) nil nil nil 1) (om-load-boxin "input7" 7 (om-make-point 357 48) "no documentation" nil nil nil) (om-load-boxin "input6" 6 (om-make-point 307 48) "no documentation" nil nil nil) (om-load-boxin "input5" 5 (om-make-point 257 48) "no documentation" nil nil nil) (om-load-boxin "input4" 4 (om-make-point 207 48) "no documentation" nil nil nil) (om-load-boxin "input3" 3 (om-make-point 157 48) "no documentation" nil nil nil) (om-load-boxin "input2" 2 (om-make-point 107 48) "no documentation" nil nil nil) (om-load-boxin "input1" 1 (om-make-point 57 48) "no documentation" nil nil nil) (om-load-boxin "input" 0 (om-make-point 7 48) "no documentation" nil nil nil) (om-load-boxout "output" 0 (om-make-point 293 533) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil))) (quote ((9 0 6 0 nil 0) (8 0 6 1 nil 0) (7 0 6 2 nil 0) (2 0 13 0 nil 0) (10 0 13 1 nil 0) (17 0 13 2 nil 0) (14 0 13 3 nil 0) (0 0 13 4 nil 0) (6 0 13 5 nil 0) (5 0 13 6 nil 0) (3 0 13 7 nil 0) (21 0 20 0 nil 0) (13 0 20 1 nil 0) (29 0 21 0 nil 0) (28 0 21 1 nil 0) (27 0 21 2 nil 0) (26 0 21 3 nil 0) (25 0 21 4 nil 0) (24 0 21 5 nil 0) (23 0 21 6 nil 0) (22 0 21 7 nil 0) (20 0 30 0 nil 0))) nil 6.04))
