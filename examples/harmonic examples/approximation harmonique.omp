; OM File Header - Saved 2010/11/16 19:27:30
; (6.030006 :patc (om-make-point 1 55) (om-make-point 50 50) (om-make-point 513 476) "No documentation " 183 0 nil "2010/11/16 19:27:30")
; End File Header
(in-package :om)(load-lib-for (quote ("Situation")))(setf *om-current-persistent* (om-load-patch1 "approximation harmonique" (quote ((om-load-boxcall (quote bastype) "aux5" (quote t) (quote nil) (om-make-point 67 94) (om-make-point 20 28) 8 "8" nil) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 155 94) (om-make-point 30 28) (list 1) "(1)" nil) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 202 94) (om-make-point 26 28) nil "nil" nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 197 16) (om-make-point 119 28) (list (quote |0_7|) (list (quote l) (list (quote not) (list 4 4)))) "(0_7 (l (not (4 4))))" nil) (om-load-boxcall (quote genfun) "X-DST_FILT" (quote x-dst_filt) (quote ((om-load-inputfun (quote input-funbox) "expression" "EXP" (list (quote |0_7|) (list (quote l) (list (quote not) (list 4 4))))))) (om-make-point 229 46) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "object" nil) (om-load-inputfun (quote input-funbox) "LMIDIC" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "LONSET" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "LDUR" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "LVEL" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "LOFFSET" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "LCHAN" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "LEGATO" "LEGATO" 100))) (om-make-point 136 321) (om-make-point 211 98) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6540) (5820) (6520) (6180) (6540) (5860) (5140) (5480))) :lonset (quote (0 1000 2000 3000 4000 5000 6000 7000 8000)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quote ((100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1))) :legato 100)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (player deltapict approx fontsize staff cmnpref outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems microplay scale)) (list (quote :midishare) (om-make-point 0 0) 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) nil nil)) t nil nil nil) (om-load-boxcall (quote genfun) "OM-ROUND" (quote om-round) (quote ((om-load-inputfun (quote input-funbox) "number or tree" "SELF" 1))) (om-make-point 158 243) (om-make-point 53 53) nil nil nil 1) (om-load-boxcall (quote genfun) "CH-SOL" (quote ch-sol) (quote ((om-load-inputfun (quote input-funbox) "solution" "LS" nil))) (om-make-point 166 191) (om-make-point 41 45) nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 284 98) (om-make-point 50 28) (list 3.5 7) "(3.5 7)" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 48 47) (om-make-point 127 28) (list (quote app) 0.5 (list (quote |48_72S0.2|))) "(app 0.5 (48_72s0.2))" nil) (om-load-boxcall (quote genfun) "CSOLVER" (quote csolver) (quote ((om-load-inputfun (quote input-funbox) "number of chords" "N-CH" 8) (om-load-inputfun (quote input-funbox) "Ambitus" "AMB" (list (quote common-lisp-user::|48_72|))) (om-load-inputfun (quote input-funbox) "densities" "DENS" (list 1)) (om-load-inputfun (quote input-funbox) "vertical intervals" "VINT" nil) (om-load-inputfun (quote input-funbox) "Constraints" "CNSTR" nil) (om-load-inputfun (quote input-funbox) "horizontal intervals" "HINT" (list 1 3)))) (om-make-point 24 124) (om-make-point 327 53) nil nil nil 1))) (quote ((3 0 4 0 nil 0) (6 0 5 1 nil 0) (7 0 6 0 nil 0) (10 0 7 0 nil 0) (0 0 10 0 nil 0) (9 0 10 1 nil 0) (1 0 10 2 nil 0) (2 0 10 3 nil 0) (4 0 10 4 nil 0) (8 0 10 5 nil 0))) nil 6.030006))
