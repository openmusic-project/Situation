; OM File Header - Saved 2010/11/16 19:27:30
; (6.030006 :patc (om-make-point 162 53) (om-make-point 50 50) (om-make-point 750 587) "No documentation " 183 0 nil "2010/11/16 19:27:30")
; End File Header
; External resources 
; (list (list (quote :abstraction) "from csp to chords.omp"))
(in-package :om)(load-lib-for (quote ("Situation")))(setf *om-current-persistent* (om-load-patch1 "sit melodico-harmonique" (quote ((om-load-editor-box1 "VOICE 2" (quote voice) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "a list representing a rhythm tree" "TREE" (list (quote ?) (list (list (list 4 4) (list 1 1 1 1))))) (om-load-inputfun (quote input-funbox) "a chord object, a list of chords, a list of midics, a list of lists of midics..." "CHORDS" (list (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord))) (om-load-inputfun (quote input-funbox) "frequency of the quarter-note (default 60/mn)" "TEMPO" 60) (om-load-inputfun (quote input-funbox) "overlapping percentage between every successive chords, calculated from the second chord's duration" "LEGATO" 100) (om-load-inputfun (quote input-funbox) "sub lists (one sub list per chord) indicating notes to be tied to notes of the same value, in a next chord" "TIES" nil))) (om-make-point 212 450) (om-make-point 258 88) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (0 nil)) :chords (load-obj-list-from-save (quote nil)) :tempo (quote ((1/4 176) nil)) :legato 100 :ties (quote nil))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :midishare) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil nil) (om-load-boxcall (quote bastype) "aux6" (quote t) (quote nil) (om-make-point 84 226) (om-make-point 26 28) 92 "92" nil) (om-load-boxcall (quote bastype) "aux5" (quote t) (quote nil) (om-make-point 364 397) (om-make-point 32 28) 176 "176" nil) (om-load-boxcall (quote genfun) "DEFAULT-FILL" (quote default-fill) (quote ((om-load-inputfun (quote input-funbox) "expression" "EXPRESSION" (list (quote common-lisp-user::|0_7|) (list (quote common-lisp-user::interp) (list 4 7 11) (list 2 5 6)) (quote common-lisp-user::|12_15|) (list (quote common-lisp-user::interp) (list 3 8 10) (list 4 7 11)))))) (om-make-point 285 84) (om-make-point 77 53) nil nil nil 1) (om-load-boxcall (quote patch-box) "from csp to chords" (quote ("elements" "constraints" "situation" "harmonic examples" "from csp to chords")) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "input" nil) (om-load-inputfun (quote input-funbox) "transpose" "input1" nil) (om-load-inputfun (quote input-funbox) "rhythm" "input2" nil))) (om-make-point 251 324) (om-make-point 113 53) nil nil nil 2) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 345 145) (om-make-point 96 28) (list (quote not) (list (quote ints) 12 (quote t))) "(not (ints 12 t))" nil) (om-load-boxcall (quote genfun) "VINT-FILT" (quote vint-filt) (quote ((om-load-inputfun (quote input-funbox) "logical expression" "EXP" (list (quote common-lisp-user::|0_5|) (list (quote not) (list (quote or) (list (quote *) 4 7 (quote *)) (list (quote common-lisp-user::?) (quote common-lisp-user::?) 2 (quote *)))) (quote common-lisp-user::|6_8|) (list (quote and) (list (quote *) 7 (quote *))))))) (om-make-point 370 184) (om-make-point 59 53) nil nil nil 1) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 377 73) (om-make-point 184 52) (list (quote |0_20|) (list 4 7 11) (quote |21_50|) (list 0 (list (quote |2_4|)) 1 (list (quote |1_3|)) (quote u) (list (quote |3_5|))) (quote |51_91|) (list 4 7 11)) "(0_20 (4 7 11)$ 21_50 (0 (2_4) 1 (1_3) u (3_5))$ 51_91 (4 7 11))" nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 224 20) (om-make-point 200 40) (list (quote |15_40|) (list (quote interp) (list 4 7 11) (list 47 51 58)) (quote |41_79|) (list (quote interp) (list 47 51 58) (list 4 7 11))) "(15_40 (interp (4 7 11) (47 51 58))$ 41_79 (interp (47 51 58) (4 7 11)))" nil) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 180 138) (om-make-point 118 64) (list (quote |0_40|) (list (quote interp) (list 4 5) (list 3 3)) (quote |41_91|) (list (quote interp) (list 3 3) (list 4 5))) "(0_40 $(interp (4 5) (3 3))$ 41_91 $(interp (3 3) (4 5)))" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 71 76) (om-make-point 180 40) (list (quote |0_40|) (list (quote interp) (list 62 86) (list 12 116)) (quote |41_79|) (list (quote interp) (list 12 116) (list 0 48))) "(0_40 (interp (62 86) (12 116))$ 41_79 (interp (12 116) (0 48)))" nil) (om-load-boxcall (quote genfun) "CSOLVER" (quote csolver) (quote ((om-load-inputfun (quote input-funbox) "number of chords" "N-CH" 92) (om-load-inputfun (quote input-funbox) "Ambitus" "AMB" (list 48 72)) (om-load-inputfun (quote input-funbox) "densities" "DENS" (list 3)) (om-load-inputfun (quote input-funbox) "vertical intervals" "VINT" (list 2 7)) (om-load-inputfun (quote input-funbox) "Constraints" "CNSTR" nil) (om-load-inputfun (quote input-funbox) "horizontal intervals" "HINT" nil))) (om-make-point 13 256) (om-make-point 537 53) nil nil nil 1))) (quote ((4 0 0 1 nil 0) (4 1 0 2 nil 0) (2 0 0 3 nil 0) (8 0 3 0 nil 0) (11 0 4 0 nil 0) (5 0 6 0 nil 0) (1 0 11 0 nil 0) (10 0 11 1 nil 0) (9 0 11 2 nil 0) (3 0 11 3 nil 0) (6 0 11 4 nil 0) (7 0 11 5 nil 0))) nil 6.030006))
