; OM File Header - Saved 2010/11/16 19:27:30
; (6.04 :patc (om-make-point 84 190) (om-make-point 50 50) (om-make-point 742 391) "No documentation " 183 0 nil "2010/11/16 19:27:30")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "from csp to chords" (quote ((om-load-boxcall (quote genfun) "CHORD-SOL" (quote chord-sol) (quote ((om-load-inputfun (quote input-funbox) "solution" "LS" nil) (om-load-inputfun (quote input-funbox) "base note" "base note" 0))) (om-make-point 56 119) (om-make-point 59 45) nil nil nil 1) (om-load-boxin "input2" 2 (om-make-point 264 19) "rhythm" nil nil nil) (om-load-boxin "input1" 1 (om-make-point 144 43) "transpose" nil nil nil) (om-load-boxin "input" 0 (om-make-point 32 27) "no documentation" nil nil nil) (om-load-boxout "output1" 1 (om-make-point 46 280) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil) (om-load-boxout "output" 0 (om-make-point 180 257) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote ?)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 292 281) (om-make-point 29 37) nil nil nil 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 431 66) (om-make-point 120 64) (list (quote |4//4|) (list (list 1 (list 1 1 1 1)) (list 1 (list 1 1 1 1)) (list 1 (list 1 1 1 1)) (list 1 (list 1 1 1 1)))) "(4//4 ((1 (1 1 1 1)) $(1 (1 1 1 1)) $(1 (1 1 1 1)) $(1 (1 1 1 1))))" nil) (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 0))) (om-make-point 459 235) (om-make-point 53 53) nil nil nil 1) (om-load-boxcall (quote genfun) "OMIF" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "if" "TEST" nil) (om-load-inputfun (quote input-funbox) "then" "ACTION" nil) (om-load-inputfun (quote input-funbox) "else" "ELSE" nil))) (om-make-point 229 134) (om-make-point 24 53) nil nil nil 1) (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 322 15) (om-make-point 41 37) nil nil nil 1) (om-load-boxcall (quote lispfun) "/" (quote /) (quote ((om-load-inputfun (quote input-funbox) "NUMBER" "NUMBER" 3) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 16))) (om-make-point 347 71) (om-make-point 24 37) nil nil nil 1) (om-load-boxcall (quote lispfun) "CEILING" (quote ceiling) (quote ((om-load-inputfun (quote input-funbox) "NUMBER" "NUMBER" nil))) (om-make-point 338 116) (om-make-point 47 37) nil nil nil 1))) (quote ((3 0 0 0 nil 0) (2 0 0 1 nil 0) (0 0 4 0 nil 0) (9 0 5 0 nil 0) (8 0 6 1 nil 0) (7 0 8 0 nil 0) (12 0 8 1 nil 0) (1 0 9 0 nil 0) (1 0 9 1 nil 0) (6 0 9 2 nil 0) (0 0 10 0 nil 0) (10 0 11 0 nil 0) (11 0 12 0 nil 0))) nil 6.04))
